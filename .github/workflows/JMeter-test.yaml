on:
  push:
    branches: [ main ]
     
jobs:
  test-Jmeter-Pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install JMeter
        run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.2.zip
          unzip apache-jmeter-5.6.2.zip
          cd apache-jmeter-5.6.2/bin
          
      - name: Check JMeter Installation Path
        run: |
          # Search for the jmeter executable in common locations
          JMETER_PATHS=(
              "/usr/share/apache-jmeter-5.6.2/bin/jmeter"
              "/usr/local/share/apache-jmeter-5.6.2/bin/jmeter"
              "./apache-jmeter-5.6.2/bin/jmeter"  # Replace with your custom path if applicable
            )

          # Iterate through potential paths and verify existence
          for path in "${JMETER_PATHS[@]}"; do
              if [[ -f "$path" ]]; then
                echo "JMeter found at: $path"
                exit 0  # Exit successfully if found
              fi
            done

            # If not found in any location, exit with an error
          echo "JMeter installation path not found. Please check your configuration."
          exit 1

      - name: Download and Install PluginsManagerCMD.sh (if higher than 5.3.0)
        run: |
              if [[ "5.6.2" > "5.3.0" ]]; then
                # curl -O https://jmeter-plugins.org/get/
                cd ./apache-jmeter-5.6.2/lib
                curl -O https://repo1.maven.org/maven2/kg/apc/cmdrunner/2.3/cmdrunner-2.3.jar
              fi

      # - name: Install JMeter Plugin Manager using PluginsManagerCMD.sh
      #   run: |
      #           if [[ "5.6.2" > "5.3.0" ]]; then
      #             ./apache-jmeter-5.6.2/bin/PluginsManagerCMD.sh --install-command-line
      #           fi


      - name: Download and Install Plugin Manager (Optional)
        run: |
          # Download JAR (skip if Plugin Manager already installed)
          if [[ ! -f "./apache-jmeter-5.6.2/lib/ext/jmeter-plugins-manager-1.10.jar" ]]; then
            cd ./apache-jmeter-5.6.2/lib/ext
            curl -O https://repo1.maven.org/maven2/kg/apc/jmeter-plugins-manager/1.10/jmeter-plugins-manager-1.10.jar
            echo "plugin Manager installed successfully"
          fi

          # Install PluginManagerCMD
          # java -cp ./apache-jmeter-5.6.2/lib/ext/jmeter-plugins-manager-1.10.jar org.jmeterplugins.repository.PluginManagerCMDInstaller

      - name: Check for JMeter PluginsManagerCMD.sh
        run: |
          # Replace placeholders with actual paths based on your environment
          file_path="./apache-jmeter-5.6.2/bin/PluginsManagerCMD.sh"
          file_path_cmdRunner="./apache-jmeter-5.6.2/lib/cmdrunner-2.3.jar"
      
          if [[ -f "$file_path" ]]; then
            echo "JMeter Plugins Manager found at $file_path"
            # Add steps to install plugins, run tests, etc. (optional)
          else
            echo "JMeter Plugins Manager not found at $file_path"
            # Add steps to download or install the Plugins Manager (optional)
            # Install Plugin Manager (requires `jmeter` directory)
            java -cp ./apache-jmeter-5.6.2/lib/ext/jmeter-plugins-manager-1.10.jar org.jmeterplugins.repository.PluginManagerCMDInstaller
          fi

           if [[ -f "$file_path" ]]; then
            echo "JMeter Plugins Manager found at $file_path"
            # Add steps to install plugins, run tests, etc. (optional)
          else
            echo "JMeter Plugins Manager not found at $file_path"
            # Add steps to download or install the Plugins Manager (optional)
            # Install Plugin Manager (requires `jmeter` directory)
            # java -cp ./apache-jmeter-5.6.2/lib/ext/jmeter-plugins-manager-1.10.jar org.jmeterplugins.repository.PluginManagerCMDInstaller
          fi

           if [[ -f "$file_path_cmdRunner" ]]; then
            echo "JMeter cmdrunner Plugins Manager found at $file_path_cmdRunner"
            # Add steps to install plugins, run tests, etc. (optional)
          else
            echo "JMeter cmdrunner Plugins Manager not found at $file_path_cmdRunner"
            # Add steps to download or install the Plugins Manager (optional)
            # Install Plugin Manager (requires `jmeter` directory)
            # java -cp ./apache-jmeter-5.6.2/lib/ext/jmeter-plugins-manager-1.10.jar org.jmeterplugins.repository.PluginManagerCMDInstaller
          fi
     
      # - name: Download jpgc-dummy Plugin
      #   run: |
      #     wget https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip
      #     unzip jpgc-dummy-0.4.zip
      #     ./apache-jmeter-5.6.2/bin/PluginsManagerCMD.sh install jpgc-dummy-0.4.jar
      #     echo "installation of plugin is complete"

  

      # - name: Install new JMeter jpgc-dummy Plugin
      #   run: |
      #     # Download the plugin directly from the Maven repository using a more reliable method
      #     curl -o jpgc-dummy-0.4.jar https://repo1.maven.org/maven2/kg/apc/jmeter-plugins-dummy/0.4/jmeter-plugins-dummy-0.4.jar
      #     # Verify the JAR file integrity (optional, adds security)
      #     # shasum -c jpgc-dummy-0.4.jar.sha1
      #     # Install the plugin using PluginsManagerCMD with appropriate permissions
      #     chmod +x ./apache-jmeter-5.6.2/bin/PluginsManagerCMD.sh
      #     ./apache-jmeter-5.6.2/bin/PluginsManagerCMD.sh install ./apache-jmeter-5.4.1/lib/ext/jpgc-dummy-0.4.jar
      #     # Confirm installation
      #     echo "jpgc-dummy plugin installed successfully."
          
      - name: Install jpgc-dummy Plugin
        run: |
          wget https://jmeter-plugins.org/files/packages/jpgc-dummy-0.4.zip
          unzip jpgc-dummy-0.4.zip
          chmod +rx ./apache-jmeter-5.6.2/
          cd ./apache-jmeter-5.6.2/bin/
          java -jar ./apache-jmeter-5.6.2/lib/cmdrunner-2.3.jar --tool org.jmeterplugins.repository.PluginManagerCMD install jpgc-dummy-0.4.jar
          # ./apache-jmeter-5.6.2/bin/PluginsManagerCMD.sh install jpgc-dummy-0.4.jar
          echo "installation of plugin is complete"

      - name: Copy Test Files
        run: |
          cp your_test_plan.jmx jmeter/bin/

      - name: Run Test Plan
        run: |
          jmeter/bin/jmeter -n -t jmeter/bin/your_test_plan.jmx -l results.jtl

      - name: Convert JTL to CSV
        run: |
          jmeter/bin/JMeterPluginsCMD --generate-csv results.csv --input-jtl results.jtl

      - name: Analyze "error %" column
        run: |
          awk -F, '{ if ($9 > 2) { print "Error percentage exceeds 2% for request: " $2 } }' results.csv > errors.txt

      - name: Upload Results (Optional)
        uses: actions/upload-artifact@v3
        with:
          name: jmeter-results
          path: results.csv,errors.txt
